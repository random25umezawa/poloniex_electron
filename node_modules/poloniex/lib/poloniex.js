const request = require("request");
const jssha = require("jssha");

class Poloniex{
	constructor(_apiKey, _secretKey) {
		this.apiKey = _apiKey;
		this.secretKey = _secretKey;
	}

	publicQuery(_postdata,_func) {
		if(_postdata.pair) _postdata.pair = _postdata.pair.toUpperCase();
		var temp_stringarr = [];
		for(var key in _postdata) {
			temp_stringarr.push(key+"="+_postdata[key]);
		}
		var poststring = temp_stringarr.join("&");

		request({
				url: "https://poloniex.com/public?"+poststring,
				method: "POST"
			}
			,function(error,response,body) {
				console.log(body);
				_func(JSON.parse(body));
		});
	}

	privateQuery(_postdata,_func) {
		_postdata["nonce"] = (new Date()).getTime();
		if(_postdata.pair) _postdata.pair = _postdata.pair.toUpperCase();
		var temp_stringarr = [];
		for(var key in _postdata) {
			temp_stringarr.push(key+"="+_postdata[key]);
		}
		var poststring = temp_stringarr.join("&");
		var hashed = new jssha("SHA-512","TEXT");
		hashed.setHMACKey(this.secretKey,"TEXT");
		hashed.update(poststring);

		request({
				url: "https://poloniex.com/tradingApi",
				form: _postdata,
				method: "POST",
				headers: {
					"Key": this.apiKey,
					"Sign": hashed.getHMAC("HEX")
				}
			}
			,function(error,response,body) {
				_func(JSON.parse(body));
		});
	}

	getChartData(_func,_pair,_period=86400,_start=1503743191,_end=2147483647) {
		this.publicQuery({command:"returnChartData",currencyPair:_pair,period:_period,start:_start,end:_end},_func);
	}

	getBalances(_func) {
		this.privateQuery({command:"returnBalances"},_func);
	}

	getOpenOrders(_func,_pair="ALL") {
		this.privateQuery({command:"returnOpenOrders",currencyPair:_pair},_func);
	}

	getTradeHistory(_func,_pair="ALL",_start=0,_end=2147483647) {
		this.privateQuery({command:"returnTradeHistory",currencyPair:_pair,start:_start,end:_end},_func);
	}
}

module.exports = Poloniex;
